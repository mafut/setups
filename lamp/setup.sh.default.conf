# Base
DOCPATH_HTTP=${DOCPATH_HTTP:=/var/www/html}
DOCPATH_HTTPS=${DOCPATH_HTTPS:=/var/www/html}
DOCPATH_PHPMYADMIN=${DOCPATH_PHPMYADMIN:=/var/www/phpmyadmin}

PORT_HTTPS=${PORT_HTTPS:=8081}
PORT_VSCODE=${PORT_VSCODE:=8082}
PORT_OAUTHPROXY=${PORT_OAUTHPROXY:=4180}

PATH_VSCODE=${PATH_VSCODE:=/vscode}
PATH_PHPMYADMIN=${PATH_PHPMYADMIN:=/database}

ENABLE_VSCODE=${ENABLE_VSCODE:=false}
ENABLE_PHPMYADMIN=${ENABLE_PHPMYADMIN:=false}

MACKEREL_PATH_APACHE=${MACKEREL_PATH_APACHE:=/apache-status}
MACKEREL_PORT_APACHE=${MACKEREL_PORT_APACHE:=1080}

MACKEREL_PATH_NGINX=${MACKEREL_PATH_NGINX:=/nginx-status}
MACKEREL_PORT_NGINX=${MACKEREL_PORT_NGINX:=1081}

if [ -z "${BACKUP_DB}" ]; then
    BACKUP_DB=(
        "mysql"
    )
fi

# Group/User
LOG_GROUP=${LOG_GROUP:=adm}
APACHE_USER=${APACHE_USER:=www-data}
MYSQL_USER=${MYSQL_USER:=mysql}

# OS Config
DIR_APACHE_LOG=${DIR_APACHE_LOG:=/var/log/apache2}
DIR_LIGHTTPD_LOG=${DIR_LIGHTTPD_LOG:=/var/log/lighttpd}
DIR_MYSQL_LOG=${DIR_MYSQL_LOG:=/var/log/mysql}
DIR_MYSQLDUMP_LOG=${DIR_MYSQLDUMP_LOG:=/var/log/mysqldump}
DIR_NGINX_LOG=${DIR_NGINX_LOG:=/var/log/nginx}

DIR_LOGROTATION_CONFIG=${DIR_LOGROTATION_CONFIG:=/etc/logrotate.d}
DIR_LOGWATCH_DATA=${DIR_LOGWATCH_DATA:=/var/cache/logwatch}

CONFIG_OS_SSMTP=${CONFIG_OS_SSMTP:=/etc/ssmtp/ssmtp.conf}
CONFIG_OS_NGINX=${CONFIG_OS_NGINX:=/etc/nginx/nginx.conf}
CONFIG_OS_APACHE=${CONFIG_OS_APACHE:=/etc/apache2/apache2.conf}
CONFIG_OS_MYSQL=${CONFIG_OS_MYSQL:=/etc/mysql/conf.d/my.cnf}
CONFIG_OS_LIGHTTPD=${CONFIG_OS_LIGHTTPD:=/etc/lighttpd/lighttpd.conf}
CONFIG_OS_LOGROTATION=${CONFIG_OS_LOGROTATION:=/etc/logrotate.conf}
CONFIG_OS_LOGWATCH=${CONFIG_OS_LOGWATCH:=/etc/logwatch/conf/logwatch.conf}
CONFIG_OS_OAUTH2PROXY=${CONFIG_OS_OAUTH2PROXY:=/etc/oauth2-proxy.conf}
CONFIG_OS_MACKEREL=${CONFIG_OS_MACKEREL:=/etc/mackerel-agent/mackerel-agent.conf}

SYSTEMD_OAUTH2PROXY=${SYSTEMD_OAUTH2PROXY:=/usr/lib/systemd/system/oauth2_proxy.service}

# SSMTP
SSMTP_HOST=${SSMTP_HOST:=smtp.gmail.com}
SSMTP_PORT=${SSMTP_PORT:=587}
SSMTP_TLS=${SSMTP_TLS:=YES}
SSMTP_STARTTLS=${SSMTP_STARTTLS:=YES}
SSMTP_ROOTUSER=${SSMTP_ROOTUSER:=}
SSMTP_ROOTDOMAIN=${SSMTP_ROOTDOMAIN:=}
SSMTP_AUTHUSER=${SSMTP_AUTHUSER:=}
SSMTP_AUTHPASS=${SSMTP_AUTHPASS:=}

# Apache/PHP/MySQL
# https://dev.mysql.com/downloads/repo/apt/
PHP_VER=${PHP_VER:=5.6}
MYSQL_REPO=${MYSQL_REPO:=mysql-apt-config_0.8.33-1_all.deb}

# Nginx
NGINX_DEFAULT_CERTPATH=${NGINX_DEFAULT_CERTPATH:=/etc/letsencrypt/live/$(hostname)}
NGINX_CERTPATH=${NGINX_CERTPATH:=}
if [ -z "${NGINX_FQDN}" ]; then
    NGINX_FQDN=(
        "$(hostname)"
    )
fi

# Code-Server
# https://github.com/coder/code-server/releases
CODESERVER_VER=${CODESERVER_VER:=4.23.1}
CODESERVER_PASS=${CODESERVER_PASS:=password}
if [ -z "${CODESERVER_EXTS}" ]; then
    CODESERVER_EXTS=(
        # Apache Conf
        "mrmlnc.vscode-apache"
        # Bash IDE
        "mads-hartmann.bash-ide-vscode"
        # Better Comments
        "aaron-bond.better-comments"
        # Better Shell Syntax
        "jeff-hykin.better-shellscript-syntax"
        # Code Spell Checker
        "streetsidesoftware.code-spell-checker"
        # Explicit Folding
        "zokugun.explicit-folding"
        # Format HTML in PHP
        "rifi2k.format-html-in-php"
        # Git Graph
        "mhutchie.git-graph"
        # Git History
        "donjayamanne.githistory"
        # indent-rainbow
        "oderwat.indent-rainbow"
        # Inline SQL
        "qufiwefefwoyn.inline-sql-syntax"
        # Markdown All in One
        "yzhang.markdown-all-in-one"
        # Markdown Shortcut
        "mdickin.markdown-shortcuts"
        # Markdown TOC and Chapter Numer
        "TakumiI.markdown-toc-num"
        # MySQL Syntax
        "jakebathman.mysql-syntax"
        # Path Autocomplete
        "ionutvmi.path-autocomplete"
        # php cs fixer
        "junstyle.php-cs-fixer"
        # Prettier
        "esbenp.prettier-vscode"
        # Project Manager
        "alefragnani.project-manager"
        # Render line endings
        "medo64.render-crlf"
        # shell-format
        "foxundermoon.shell-format"
        # Sort JSON Objects
        "richie5um2.vscode-sort-json"
        # Sort lines
        "Tyriar.sort-lines"
        # Toggle Terminal
        "krish-r.vscode-toggle-terminal"
        # vscode-icons
        "vscode-icons-team.vscode-icons"
        # vsnotes-todo
        "mafut.vsnotes-todo"
        # zenkaku
        "mosapride.zenkaku"
    )
fi

#Optional. 1setup per host
MACKEREL_APIKEY=${MACKEREL_APIKEY:=}
OAUTH2_CLIENT=${OAUTH2_CLIENT:=}
OAUTH2_SECRET=${OAUTH2_SECRET:=}

#Others
if [ -z "${ALLOWED_PORTS}" ]; then
    ALLOWED_PORTS=()
fi
if [ -z "${CRON_JOBS}" ]; then
    CRON_JOBS=(
        "0 0 * * * /bin/sh -c 'cd ${DIR_SELF} && /usr/bin/git fetch --all && /usr/bin/git pull origin master && /usr/bin/git gc' > /dev/null 2>&1"
        "0 0 * * * /bin/sh -c 'cd ${DOCPATH_HTTPS} && /usr/bin/git fetch --all && /usr/bin/git pull origin master && /usr/bin/git gc' > /dev/null 2>&1"
    )
fi
